# syntax=docker/dockerfile:1.3-labs
FROM ubuntu:21.04

RUN <<EOF
    apt update
    apt install -y git wget sudo unzip
    rm -rf /var/lib/apt/lists/*
EOF

WORKDIR /home/

ARG RELEASE_TAG="openvscode-server-v1.63.2"
ARG RELEASE_ORG="gitpod-io"
ARG OPENVSCODE_SERVER_ROOT="/home/.openvscode-server"
ARG TARGETARCH
# Downloading the latest VSC Server release and extracting the release archive
# Rename `openvscode-server` cli tool to `code` for convenience

#PERSONAL ENVS 
ENV TERRAFORM_VERSION 1.1.4 
ENV TERRAFORM_CLI_FILE terraform_${TERRAFORM_VERSION}_linux_${TARGETARCH} 
ENV KUBERNETES_VERSION 1.23.0 

RUN <<EOF
    if [ -z "${RELEASE_TAG}" ]; then 
        echo "The RELEASE_TAG build arg must be set." >&2
        exit 1; 
    fi 
    aws_arch=$(uname -m)
    arch=$(uname -m) 
    if [ "${arch}" = "x86_64" ]; then 
        arch="x64"; 
    elif [ "${arch}" = "aarch64" ]; then 
        arch="arm64"; 
    elif [ "${arch}" = "armv7l" ]; then 
        arch="armhf"; 
    fi
    wget https://github.com/${RELEASE_ORG}/openvscode-server/releases/download/${RELEASE_TAG}/${RELEASE_TAG}-linux-${arch}.tar.gz
    tar -xzf ${RELEASE_TAG}-linux-${arch}.tar.gz
    mv -f ${RELEASE_TAG}-linux-${arch} ${OPENVSCODE_SERVER_ROOT}
    cp ${OPENVSCODE_SERVER_ROOT}/bin/openvscode-server ${OPENVSCODE_SERVER_ROOT}/bin/code
    rm -f ${RELEASE_TAG}-linux-${arch}.tar.gz

    #MY software
    export AWS_CLI_FILE=awscli-exe-linux-$aws_arch
    wget https://awscli.amazonaws.com/${AWS_CLI_FILE}.zip
    wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/${TERRAFORM_CLI_FILE}.zip
    wget -O talosctl https://github.com/talos-systems/talos/releases/latest/download/talosctl-linux-${TARGETARCH}
    wget https://storage.googleapis.com/kubernetes-release/release/v${KUBERNETES_VERSION}/bin/linux/${TARGETARCH}/kubectl
    unzip ${AWS_CLI_FILE}.zip 
    unzip ${TERRAFORM_CLI_FILE}.zip
    aws/install
    mv terraform talosctl kubectl /usr/local/bin/
    chmod +x -R /usr/local/bin
    rm -rf /aws
EOF

ARG USERNAME=openvscode-server
ARG USER_UID=1000
ARG USER_GID=$USER_UID

# Creating the user and usergroup
RUN <<EOF
    groupadd --gid $USER_GID $USERNAME 
    useradd --uid $USER_UID --gid $USERNAME -m -s /bin/bash $USERNAME
    echo $USERNAME ALL=\(root\) NOPASSWD:ALL > /etc/sudoers.d/$USERNAME
    chmod 0440 /etc/sudoers.d/$USERNAME
EOF

RUN <<EOF 
    chmod g+rw /home
    mkdir -p /home/workspace
    chown -R $USERNAME:$USERNAME /home/workspace
    chown -R $USERNAME:$USERNAME ${OPENVSCODE_SERVER_ROOT}
EOF

USER $USERNAME

WORKDIR /home/workspace/

ENV LANG C.UTF-8
ENV LC_ALL C.UTF-8
ENV HOME /home/workspace
ENV EDITOR code
ENV VISUAL code
ENV GIT_EDITOR "code --wait"
ENV OPENVSCODE_SERVER_ROOT ${OPENVSCODE_SERVER_ROOT} 
ENV PATH "${OPENVSCODE_SERVER_ROOT}/bin:${PATH}"

# Default exposed port if none is specified
EXPOSE 3000

ENTRYPOINT [ "/bin/sh", "-c", "exec ${OPENVSCODE_SERVER_ROOT}/server.sh --host 0.0.0.0 --connection-token 00000 \"${@}\"", "--" ]
